/**
 * This class is generated by jOOQ
 */
package jooq.sqlite.gen;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Dataframe;
import jooq.sqlite.gen.tables.Dataframecolumn;
import jooq.sqlite.gen.tables.Estimatorspec;
import jooq.sqlite.gen.tables.Event;
import jooq.sqlite.gen.tables.Exampleselectorevent;
import jooq.sqlite.gen.tables.Experimentrun;
import jooq.sqlite.gen.tables.Fitevent;
import jooq.sqlite.gen.tables.Hyperparameter;
import jooq.sqlite.gen.tables.Model;
import jooq.sqlite.gen.tables.Modelmetricevent;
import jooq.sqlite.gen.tables.Project;
import jooq.sqlite.gen.tables.SqliteSequence;
import jooq.sqlite.gen.tables.Transformevent;
import jooq.sqlite.gen.tables.Unsupervisedevent;
import jooq.sqlite.gen.tables.Unsupervisedmetricevent;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 1378692365;

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>DataFrame</code>.
     */
    public final Dataframe DATAFRAME = jooq.sqlite.gen.tables.Dataframe.DATAFRAME;

    /**
     * The table <code>DataFrameColumn</code>.
     */
    public final Dataframecolumn DATAFRAMECOLUMN = jooq.sqlite.gen.tables.Dataframecolumn.DATAFRAMECOLUMN;

    /**
     * The table <code>EstimatorSpec</code>.
     */
    public final Estimatorspec ESTIMATORSPEC = jooq.sqlite.gen.tables.Estimatorspec.ESTIMATORSPEC;

    /**
     * The table <code>Event</code>.
     */
    public final Event EVENT = jooq.sqlite.gen.tables.Event.EVENT;

    /**
     * The table <code>ExampleSelectorEvent</code>.
     */
    public final Exampleselectorevent EXAMPLESELECTOREVENT = jooq.sqlite.gen.tables.Exampleselectorevent.EXAMPLESELECTOREVENT;

    /**
     * The table <code>ExperimentRun</code>.
     */
    public final Experimentrun EXPERIMENTRUN = jooq.sqlite.gen.tables.Experimentrun.EXPERIMENTRUN;

    /**
     * The table <code>FitEvent</code>.
     */
    public final Fitevent FITEVENT = jooq.sqlite.gen.tables.Fitevent.FITEVENT;

    /**
     * The table <code>HyperParameter</code>.
     */
    public final Hyperparameter HYPERPARAMETER = jooq.sqlite.gen.tables.Hyperparameter.HYPERPARAMETER;

    /**
     * The table <code>Model</code>.
     */
    public final Model MODEL = jooq.sqlite.gen.tables.Model.MODEL;

    /**
     * The table <code>ModelMetricEvent</code>.
     */
    public final Modelmetricevent MODELMETRICEVENT = jooq.sqlite.gen.tables.Modelmetricevent.MODELMETRICEVENT;

    /**
     * The table <code>Project</code>.
     */
    public final Project PROJECT = jooq.sqlite.gen.tables.Project.PROJECT;

    /**
     * The table <code>TransformEvent</code>.
     */
    public final Transformevent TRANSFORMEVENT = jooq.sqlite.gen.tables.Transformevent.TRANSFORMEVENT;

    /**
     * The table <code>UnsupervisedEvent</code>.
     */
    public final Unsupervisedevent UNSUPERVISEDEVENT = jooq.sqlite.gen.tables.Unsupervisedevent.UNSUPERVISEDEVENT;

    /**
     * The table <code>UnsupervisedMetricEvent</code>.
     */
    public final Unsupervisedmetricevent UNSUPERVISEDMETRICEVENT = jooq.sqlite.gen.tables.Unsupervisedmetricevent.UNSUPERVISEDMETRICEVENT;

    /**
     * The table <code>sqlite_sequence</code>.
     */
    public final SqliteSequence SQLITE_SEQUENCE = jooq.sqlite.gen.tables.SqliteSequence.SQLITE_SEQUENCE;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Dataframe.DATAFRAME,
            Dataframecolumn.DATAFRAMECOLUMN,
            Estimatorspec.ESTIMATORSPEC,
            Event.EVENT,
            Exampleselectorevent.EXAMPLESELECTOREVENT,
            Experimentrun.EXPERIMENTRUN,
            Fitevent.FITEVENT,
            Hyperparameter.HYPERPARAMETER,
            Model.MODEL,
            Modelmetricevent.MODELMETRICEVENT,
            Project.PROJECT,
            Transformevent.TRANSFORMEVENT,
            Unsupervisedevent.UNSUPERVISEDEVENT,
            Unsupervisedmetricevent.UNSUPERVISEDMETRICEVENT,
            SqliteSequence.SQLITE_SEQUENCE);
    }
}
