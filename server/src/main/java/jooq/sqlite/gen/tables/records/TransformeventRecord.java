/**
 * This class is generated by jOOQ
 */
package jooq.sqlite.gen.tables.records;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Transformevent;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransformeventRecord extends UpdatableRecordImpl<TransformeventRecord> implements Record9<Integer, Integer, Integer, Integer, String, String, String, Integer, Integer> {

    private static final long serialVersionUID = -705500113;

    /**
     * Setter for <code>TransformEvent.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TransformEvent.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TransformEvent.oldDf</code>.
     */
    public void setOlddf(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>TransformEvent.oldDf</code>.
     */
    public Integer getOlddf() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>TransformEvent.newDf</code>.
     */
    public void setNewdf(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>TransformEvent.newDf</code>.
     */
    public Integer getNewdf() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TransformEvent.model</code>.
     */
    public void setModel(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>TransformEvent.model</code>.
     */
    public Integer getModel() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>TransformEvent.inputColumns</code>.
     */
    public void setInputcolumns(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>TransformEvent.inputColumns</code>.
     */
    public String getInputcolumns() {
        return (String) get(4);
    }

    /**
     * Setter for <code>TransformEvent.outputColumns</code>.
     */
    public void setOutputcolumns(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>TransformEvent.outputColumns</code>.
     */
    public String getOutputcolumns() {
        return (String) get(5);
    }

    /**
     * Setter for <code>TransformEvent.predictionColumn</code>.
     */
    public void setPredictioncolumn(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>TransformEvent.predictionColumn</code>.
     */
    public String getPredictioncolumn() {
        return (String) get(6);
    }

    /**
     * Setter for <code>TransformEvent.experimentRun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>TransformEvent.experimentRun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>TransformEvent.stageNumber</code>.
     */
    public void setStagenumber(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>TransformEvent.stageNumber</code>.
     */
    public Integer getStagenumber() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, Integer, String, String, String, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Integer, Integer, Integer, String, String, String, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Transformevent.TRANSFORMEVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Transformevent.TRANSFORMEVENT.OLDDF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Transformevent.TRANSFORMEVENT.NEWDF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Transformevent.TRANSFORMEVENT.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transformevent.TRANSFORMEVENT.INPUTCOLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Transformevent.TRANSFORMEVENT.OUTPUTCOLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Transformevent.TRANSFORMEVENT.PREDICTIONCOLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Transformevent.TRANSFORMEVENT.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Transformevent.TRANSFORMEVENT.STAGENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOlddf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getNewdf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getInputcolumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getOutputcolumns();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPredictioncolumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getStagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value2(Integer value) {
        setOlddf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value3(Integer value) {
        setNewdf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value4(Integer value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value5(String value) {
        setInputcolumns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value6(String value) {
        setOutputcolumns(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value7(String value) {
        setPredictioncolumn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value8(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord value9(Integer value) {
        setStagenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformeventRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, String value6, String value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransformeventRecord
     */
    public TransformeventRecord() {
        super(Transformevent.TRANSFORMEVENT);
    }

    /**
     * Create a detached, initialised TransformeventRecord
     */
    public TransformeventRecord(Integer id, Integer olddf, Integer newdf, Integer model, String inputcolumns, String outputcolumns, String predictioncolumn, Integer experimentrun, Integer stagenumber) {
        super(Transformevent.TRANSFORMEVENT);

        set(0, id);
        set(1, olddf);
        set(2, newdf);
        set(3, model);
        set(4, inputcolumns);
        set(5, outputcolumns);
        set(6, predictioncolumn);
        set(7, experimentrun);
        set(8, stagenumber);
    }
}
