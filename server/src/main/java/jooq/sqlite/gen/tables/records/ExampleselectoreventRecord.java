/**
 * This class is generated by jOOQ
 */
package jooq.sqlite.gen.tables.records;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Exampleselectorevent;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExampleselectoreventRecord extends UpdatableRecordImpl<ExampleselectoreventRecord> implements Record7<Integer, Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = -1743740854;

    /**
     * Setter for <code>ExampleSelectorEvent.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.oldDf</code>.
     */
    public void setOlddf(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.oldDf</code>.
     */
    public Integer getOlddf() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.labelDf</code>.
     */
    public void setLabeldf(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.labelDf</code>.
     */
    public Integer getLabeldf() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.newDf</code>.
     */
    public void setNewdf(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.newDf</code>.
     */
    public Integer getNewdf() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.estimatorSpec</code>.
     */
    public void setEstimatorspec(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.estimatorSpec</code>.
     */
    public Integer getEstimatorspec() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.experimentRun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.experimentRun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ExampleSelectorEvent.stageNumber</code>.
     */
    public void setStagenumber(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>ExampleSelectorEvent.stageNumber</code>.
     */
    public Integer getStagenumber() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.OLDDF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.LABELDF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.NEWDF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.ESTIMATORSPEC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Exampleselectorevent.EXAMPLESELECTOREVENT.STAGENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getOlddf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getLabeldf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getNewdf();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getEstimatorspec();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getStagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value2(Integer value) {
        setOlddf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value3(Integer value) {
        setLabeldf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value4(Integer value) {
        setNewdf(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value5(Integer value) {
        setEstimatorspec(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value6(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord value7(Integer value) {
        setStagenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExampleselectoreventRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExampleselectoreventRecord
     */
    public ExampleselectoreventRecord() {
        super(Exampleselectorevent.EXAMPLESELECTOREVENT);
    }

    /**
     * Create a detached, initialised ExampleselectoreventRecord
     */
    public ExampleselectoreventRecord(Integer id, Integer olddf, Integer labeldf, Integer newdf, Integer estimatorspec, Integer experimentrun, Integer stagenumber) {
        super(Exampleselectorevent.EXAMPLESELECTOREVENT);

        set(0, id);
        set(1, olddf);
        set(2, labeldf);
        set(3, newdf);
        set(4, estimatorspec);
        set(5, experimentrun);
        set(6, stagenumber);
    }
}
