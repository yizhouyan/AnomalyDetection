/**
 * This class is generated by jOOQ
 */
package jooq.sqlite.gen.tables.records;


import javax.annotation.Generated;

import jooq.sqlite.gen.tables.Event;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record5<Integer, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 839204512;

    /**
     * Setter for <code>Event.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Event.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Event.eventType</code>.
     */
    public void setEventtype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Event.eventType</code>.
     */
    public String getEventtype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Event.eventId</code>.
     */
    public void setEventid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Event.eventId</code>.
     */
    public Integer getEventid() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>Event.stageNumber</code>.
     */
    public void setStagenumber(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>Event.stageNumber</code>.
     */
    public Integer getStagenumber() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>Event.experimentRun</code>.
     */
    public void setExperimentrun(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>Event.experimentRun</code>.
     */
    public Integer getExperimentrun() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Event.EVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Event.EVENT.EVENTTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Event.EVENT.EVENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Event.EVENT.STAGENUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Event.EVENT.EXPERIMENTRUN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEventtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getEventid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getStagenumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getExperimentrun();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value2(String value) {
        setEventtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value3(Integer value) {
        setEventid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value4(Integer value) {
        setStagenumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value5(Integer value) {
        setExperimentrun(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Integer id, String eventtype, Integer eventid, Integer stagenumber, Integer experimentrun) {
        super(Event.EVENT);

        set(0, id);
        set(1, eventtype);
        set(2, eventid);
        set(3, stagenumber);
        set(4, experimentrun);
    }
}
